spring:
  application:
    name: school-management-system
  
  profiles:
    active: dev
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
    open-in-view: false
  
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

server:
  port: 8081
  servlet:
    context-path: /

logging:
  level:
    com.schoolmanagement: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

  # Email Configuration - Gmail SMTP
  mail:
    host: smtp.gmail.com
    port: 587
    username: koboobooko2@gmail.com
    password: wnwoemutinmqmjlf
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            trust: smtp.gmail.com
          connectiontimeout: 30000
          timeout: 30000
          writetimeout: 30000
          debug: true

jwt:
  secret: mySecretKey123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
  expiration: 86400000
  refresh-expiration: 604800000

---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/school_mgmt
    username: root
    password: Abutwalib12@#
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

logging:
  level:
    com.schoolmanagement: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/school_mgmt}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:Abutwalib12@#}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    com.schoolmanagement: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/school-management/application.log

app:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true

# M-Pesa Configuration
# To switch to production:
#   1. Change environment: from "sandbox" to "production"
#   2. Update consumer-key, consumer-secret with production credentials from Safaricom Developer Portal
#   3. Update short-code to your production business number
#   4. Update pass-key to production passkey from your production app
#   5. Update callback-url to your production HTTPS endpoint
mpesa:
  environment: ${MPESA_ENVIRONMENT:sandbox}  # Options: "sandbox" or "production"
  consumer-key: ${MPESA_CONSUMER_KEY:17ZdF9Q2PKAOwJ64Yzl1dxS4iZMsQOAXUUaEVSQZrTmDbMkG}
  consumer-secret: ${MPESA_CONSUMER_SECRET:ZGhNJhzbE9DHKKmAhAZWI045A5B6yUG3uAqnXpx5LJjXYWH7Stn8xUxqGHWpfhKE}
  short-code: ${MPESA_SHORT_CODE:174379}
  pass-key: ${MPESA_PASS_KEY:bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919}
  callback-url: ${MPESA_CALLBACK_URL:https://e877a2ada6ee.ngrok-free.app/api/finance/payments/webhooks/mpesa}
